{"version":3,"sources":["webpack:///webpack/bootstrap b7cbc9f2bcf2be10765a","webpack:///./lib/kleosPad.js","webpack:///./lib/drum.js","webpack:///./lib/kick.js","webpack:///./lib/util.js","webpack:///./lib/snare.js","webpack:///./lib/hi_hat.js","webpack:///./lib/ride.js","webpack:///./lib/cymbal.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA,EAAC;;AAED;AACA;AACA,EAAC;;;;;;;AC3BD;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAiB,gBAAgB;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACvDA;AACA;;AAEA,oCAAmC;AACnC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACTA;AACA;;AAEA,oCAAmC;AACnC;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAuD;AACvD,0BAAyB;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;AClDA;AACA;;AAEA,oCAAmC;AACnC;AACA;AACA;AACA;;AAEA;;;;AAIA;;;;;;;ACbA;AACA;;AAEA,mCAAkC;AAClC;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACXA;AACA;;AAEA,+CAA8C;;AAE9C,qCAAoC;AACpC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b7cbc9f2bcf2be10765a\n **/","const Kick = require('./kick');\nconst Snare = require('./snare');\nconst HiHat = require('./hi_hat');\nconst Ride = require('./ride');\n\nlet kick = new Kick();\nlet snare = new Snare();\nlet hiHat = new HiHat();\nlet ride = new Ride();\n\n\nwindow.setInterval( () => {\n  kick.play();\n}, 800);\n\nwindow.setTimeout(() => {\n  window.setInterval( () => {\n    snare.play();\n  }, 800);\n}, 400);\n\nwindow.setInterval( () => {\n  hiHat.play();\n}, 200);\n\nwindow.setInterval( () => {\n  ride.play();\n}, 1600/3);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/kleosPad.js\n ** module id = 0\n ** module chunks = 0\n **/","const Drum = function(options){\n  this.context = new AudioContext();\n  this.duration = options.duration;\n  // this.decay = options.decay;\n  this.frequency = options.frequency;\n};\n\n\nDrum.prototype.generateEnvelope = function(gainValue = 1){\n  let envelope = this.context.createGain();\n  envelope.gain.setValueAtTime(gainValue, this.context.currentTime);\n  return envelope;\n};\n\nDrum.prototype.generateBiquadFilter = function(options){\n  let filter = this.context.createBiquadFilter();\n  filter.type = options.type;\n  filter.frequency.value = options.cutoffFreq;\n  return filter;\n};\n\nDrum.prototype.generateOscillator = function(frequency = this.frequency){\n  let oscillator = this.context.createOscillator();\n  oscillator.frequency.value = frequency;\n  return oscillator;\n};\n\nDrum.prototype.generateNoise = function(){\n  let bufferSize = this.context.sampleRate;\n  let buffer = this.context.createBuffer(1, bufferSize, this.context.sampleRate);\n  let output = buffer.getChannelData(0);\n  \n  for (let i = 0; i < bufferSize; i++) {\n    output[i] = Math.random() * 2 - 1;\n  }\n  \n  let noise = this.context.createBufferSource();\n  noise.buffer = buffer;\n    \n  return noise;\n};\n\nDrum.prototype.play = function(){\n  this.attack();\n  this.release();\n};\n\nDrum.prototype.attack = function(){\n  //implemented by subclasses\n};\n\nDrum.prototype.release = function(){\n  //implemented by subclasses\n};\n\nmodule.exports = Drum;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/drum.js\n ** module id = 1\n ** module chunks = 0\n **/","const Drum = require('./drum');\nconst Util = require('./util');\n\nconst Kick = function (options = {}){\n  options.frequency = 150;\n  options.duration = 0.5;\n  Drum.call(this, options);\n};\n\nUtil.inherits(Kick, Drum);\n\nKick.prototype.attack = function(){\n  this.envelope = this.generateEnvelope();\n  this.oscillator= this.generateOscillator();\n  \n  //construct audio graph\n  this.oscillator.connect(this.envelope);\n  this.envelope.connect(this.context.destination);\n  \n  this.oscillator.start();\n};\n\nKick.prototype.release = function(){\n\n  this.envelope.gain.exponentialRampToValueAtTime(0.01, this.context.currentTime + this.duration);\n  \n  this.oscillator.frequency.exponentialRampToValueAtTime(0.01, this.context.currentTime + this.duration);\n  \n  this.oscillator.stop(this.context.currentTime + this.duration);\n};\n\nmodule.exports = Kick;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/kick.js\n ** module id = 2\n ** module chunks = 0\n **/","const Util = {\n  inherits: function(Child, Parent){\n    const Surrogate = function(){};\n    Surrogate.prototype = Parent.prototype;\n    Child.prototype = new Surrogate();\n    Child.prototype.constructor = Child;\n  }\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util.js\n ** module id = 3\n ** module chunks = 0\n **/","const Drum = require('./drum');\nconst Util = require('./util');\n\nconst Snare = function(options = {}){\n  options.duration = 0.2;\n  options.frequency = 200;\n  Drum.call(this, options);\n  \n};\n\nUtil.inherits(Snare, Drum);\n\nSnare.prototype.attack = function() {\n\n  //generate ringing of snares with filtered white noise\n  this.noise = this.generateNoise();\n  let highPassFilter = this.generateBiquadFilter({\n    type:\"highpass\",\n    cutoffFreq:1000\n  });\n  this.noiseEnvelope = this.generateEnvelope();\n  \n  //construct audio graph for ringing of snares\n  this.noise.connect(highPassFilter);\n  highPassFilter.connect(this.noiseEnvelope);\n  this.noiseEnvelope.connect(this.context.destination);\n\n  //generate hit\n  this.oscillator = this.generateOscillator();\n  this.oscillator.type = \"triangle\";\n  this.oscillatorEnvelope = this.generateEnvelope(0.3);//felt, not heard\n  this.hitDuration = 0.1; //cut off the hit early for snappiness\n  \n  //construct audio graph for hit\n  this.oscillator.connect(this.oscillatorEnvelope);\n  this.oscillatorEnvelope.connect(this.context.destination);\n  \n  this.noise.start();\n  this.oscillator.start();\n};\n\nSnare.prototype.release = function() {\n  this.oscillatorEnvelope.gain.exponentialRampToValueAtTime(0.01, this.context.currentTime + this.hitDuration);\n  \n  this.noiseEnvelope.gain.exponentialRampToValueAtTime(0.01, this.context.currentTime + this.duration);\n  \n  this.oscillator.stop(this.context.currentTime + this.duration);\n  this.noise.stop(this.context.currentTime + this.duration);\n};\n\nmodule.exports = Snare;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/snare.js\n ** module id = 4\n ** module chunks = 0\n **/","const Cymbal = require('./cymbal');\nconst Util = require('./util');\n\nconst HiHat = function(options = {}){\n  options.frequency = 100;\n  options.duration = 0.15;\n  Cymbal.call(this, options);\n};\n\nUtil.inherits(HiHat, Cymbal);\n\n\n\nmodule.exports = HiHat;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/hi_hat.js\n ** module id = 5\n ** module chunks = 0\n **/","const Cymbal = require('./cymbal');\nconst Util = require('./util');\n\nconst Ride = function(options = {}){\n  options.frequency = 500;\n  options.duration = 0.5;\n  Cymbal.call(this, options);\n};\n\nUtil.inherits(Ride, Cymbal);\n\nmodule.exports = Ride;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/ride.js\n ** module id = 6\n ** module chunks = 0\n **/","const Drum = require('./drum');\nconst Util = require('./util');\n\nconst RATIOS = [2, 3, 4.16, 5.43, 6.79, 8.21]; //ratios for metallic overtones\n\nconst Cymbal = function(options = {}){\n  //child classes determine frequency and duration\n  Drum.call(this, options);\n};\n\nUtil.inherits(Cymbal, Drum);\n\nCymbal.prototype.attack = function(){\n  //begin by building the audio graph\n  let bandpass = this.generateBiquadFilter({\n    type:\"bandpass\",\n    cutoffFreq: 10000\n  });\n  \n  let highpass = this.generateBiquadFilter({\n    type:\"highpass\",\n    cutoffFreq: 7000\n  });\n  \n  this.envelope = this.generateEnvelope();\n  \n  //connect audio graph\n  \n  bandpass.connect(highpass);\n  highpass.connect(this.envelope);\n  this.envelope.connect(this.context.destination);\n  \n  //now generate the oscillators for various overtones of the hit\n  \n  this.oscillators = RATIOS.map((ratio) => {\n    let oscillator = this.generateOscillator(this.frequency * ratio);\n    oscillator.type=\"square\";\n    //connect to audio graph\n    oscillator.connect(bandpass);\n    oscillator.start();\n    return oscillator;\n  });\n};\n\nCymbal.prototype.release = function(){\n  this.envelope.gain.setValueAtTime(0.01, this.context.currentTime);\n  this.envelope.gain.exponentialRampToValueAtTime(1, this.context.currentTime + 0.02);\n  this.envelope.gain.exponentialRampToValueAtTime(0.3, this.context.currentTime + 0.03);\n  this.envelope.gain.exponentialRampToValueAtTime(0.01, this.context.currentTime + this.duration);\n  this.oscillators.forEach((oscillator) => {\n    oscillator.stop(this.context.currentTime + this.duration);\n  });\n};\n\nmodule.exports = Cymbal;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/cymbal.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}