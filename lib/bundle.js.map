{"version":3,"sources":["webpack:///webpack/bootstrap fc3c5abe39bc6f299673","webpack:///./lib/kleosPad.js","webpack:///./lib/drum.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA,KAAI;;;;;;;ACTJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap fc3c5abe39bc6f299673\n **/","const Drum = require('./drum');\n\nlet drum = new Drum({\n  frequency:50,\n  duration: 0.5 //seconds\n});\n\n// window.setInterval(() => {\n//   drum.play();\n// }, 400);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/kleosPad.js\n ** module id = 0\n ** module chunks = 0\n **/","const Drum = function(options){\n  this.context = new AudioContext();\n  this.duration = options.duration;\n  this.decay = options.decay;\n  this.frequency = options.frequency;\n};\n\nDrum.prototype.play = function(){\n  let oscillator = this.context.createOscillator();\n  oscillator.frequency = this.frequency;\n  \n  let gainNode = this.context.createGain();\n  gainNode.gain.setValueAtTime(0.8, this.context.currentTime);\n  gainNode.connect(this.context.destination);\n  \n  oscillator.connect(gainNode);\n  \n  oscillator.start();\n  \n  gainNode.gain.exponentialRampToValueAtTime(0.01, this.context.currentTime + this.duration);\n  oscillator.frequency.exponentialRampToValueAtTime(0.01, this.context.currentTime + this.duration);\n  \n  oscillator.stop(this.context.currentTime + this.duration);\n};\n\n\nmodule.exports = Drum;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/drum.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}